extends layout

block content
  h2 Add Project
  form(method='POST', onsubmit='return validateForm()')
    input(type='hidden', name='dataset', id='dataset')
    input(type='hidden', name='optimizer', id='optimizer')
    input(type='hidden', name='criterion', id='criterion')
    .row
      .col-md-4
        .card
          .card-body
            .general-container
              h2 General Info
              p2 Note: Only available datasets are MNIST 
              .mb-3
                label.form-label(for='project_name') Project Name
                input.form-control(type='text', id='name', name='name')
              .mb-3
                button.btn2.btn-secondary.dropdown-toggle(type='button', id=`dropdown_menu_dataset`, data-bs-toggle='dropdown', aria-expanded='false')
                  | Choose dataset 
                ul.dropdown-menu(aria-labelledby=`dropdown_menu_dataset`, style='max-height: 100%; overflow-y: scroll;')
                  li
                    a.dropdown-item(href='#', onclick='update_dataset("MNIST")') MNIST
              .mb-3
      .col-md-4
        .card
          .card-body
            .loading-container(id = 'loading-info')
              h2 Loading Info
              .mb-3
                label.form-label(for='batch_size') batch_size
                input.form-control(type ='Number', id='loading_batch_size', name='loading_batch_size')
              .mb-3
                label.form-label(for='random_seed') random_seed
                input.form-control(type ='Number', id='random_seed', name='random_seed')
              //- .mb-3
              //-   label.form-label(for='valid_size') valid_size
              //-   input.form-control(type ='Number', id='valid_size', name='valid_size')
              .mb-3
                input.form-check-input(type='checkbox', id='augment', name='augment')
                label.form-check-label(for='augment') Augment
              .mb-3
                input.form-check-input(type='checkbox', id='shuffle', name='shuffle')
                label.form-check-label(for='shuffle') Shuffle
      .col-md-4
        .card
          .card-body           
            .training-container(id = 'training-info')
              h2 Training Info
              p2 Note: Only available Optimizers are: Adam 
              br
              p2 Note: Only available Criterions are: CrossEntropyLoss
              .mb-3
                label.form-label(for='epoch') Epoch
                input.form-control(type='Number', id='epoch', name='epoch')
              .mb-3
                button.btn2.btn-secondary.dropdown-toggle(type='button', id=`dropdown_menu_optimizer`, data-bs-toggle='dropdown', aria-expanded='false')
                  | Choose optimizer 
                ul.dropdown-menu(aria-labelledby=`dropdown_menu_optimizer`, style='max-height: 100%; overflow-y: scroll;')
                  li
                    a.dropdown-item(href='#', onclick='update_optimizer("Adam")') Adam
              .mb-3
                button.btn2.btn-secondary.dropdown-toggle(type='button', id=`dropdown_menu_criterion`, data-bs-toggle='dropdown', aria-expanded='false')
                  | Choose Criterion 
                ul.dropdown-menu(aria-labelledby=`dropdown_menu_criterion`, style='max-height: 100%; overflow-y: scroll;')
                  li
                    a.dropdown-item(href='#', onclick='update_criterion("CrossEntropyLoss")') CrossEntropyLoss
              .mb-3
                label.form-label(for='batch_size') Batch Size
                input.form-control(type='number', id='training_batch_size', name='training_batch_size')
              .mb-3
                label.form-label(for='learning_rate') Learning Rate
                input.form-control(type='number',step = 0.001, id='learning_rate', name='learning_rate')
              .mb-3
                label.form-label(for='weight_decay') Weight Decay
                input.form-control(type='number',step = 0.001, id='weight_decay', name='weight_decay')
              //- .mb-3
              //-   label.form-label(for='momentum') Momentum
              //-   input.form-control(type='number',step = 0.001, id='momentum', name='momentum')
    .row
      .d-flex.justify-content-center
        button.btn.btn-primary(style='width:150px', type='submit') Submit

append scripts
  script.
    var project_names = !{JSON.stringify(project_names)};
    console.log(project_names)


    function update_dataset(dataset_choice) {
      dataset = document.getElementById('dataset')
      dataset.value = dataset_choice
      dataset_dropdown = document.getElementById('dropdown_menu_dataset')
      dataset_dropdown.innerHTML = `Dataset: ${dataset_choice}`
    }
    function update_optimizer(optimizer_choice){
      optimizer = document.getElementById('optimizer')
      optimizer.value = optimizer_choice 
      optimizer_dropdown = document.getElementById('dropdown_menu_optimizer')
      optimizer_dropdown.innerHTML = `Optimizer: ${optimizer_choice}`
    }
    function update_criterion(criterion_choice){
      criterion = document.getElementById('criterion')
      criterion.value = criterion_choice
      criterion_dropdown = document.getElementById('dropdown_menu_criterion')
      criterion_dropdown.innerHTML = `Criterion: ${criterion_choice}`
    }

    function validateForm() {
      // Validate general container inputs
      const project_name = document.getElementById('name').value;
      if (!project_name) {
        alert('Please fill out all general information fields.');
        return false;
      }
      const dataset = document.getElementById('dataset').value
      if (!dataset) {
        alert('Please fill out all general information fields.');
        return false;
      }
      if (['MNIST'].indexOf(dataset) === -1){
        alert('Not a valid dataset')
        return false
      }
      
      const optimizer = document.getElementById('optimizer').value
      if (['Adam'].indexOf(optimizer) === -1){
        alert('Not a valid optimizer')
        return false
      }
      const criterion = document.getElementById('criterion').value
      if (['CrossEntropyLoss'].indexOf(criterion) === -1){
        alert('Not a valid criterion')
        return false
      }
      const loading_info = document.querySelectorAll('#loading-info input')
      for (let input of loading_info) {
        if (!input.value) {
          alert('Please fill out all information fields')
          return false
        }
      }
      const training_info = document.querySelectorAll('#training-info input')
      for (let input of training_info) {
        if (!input.value) {
          alert('Please fill out all information fields')
          return false
        }
      }
      if (project_names.indexOf(project_name) !== -1){
        alert("project name is already in use! Please pick another one.")
        return false
      }
      return true;  // All fields are filled
    }

