extends layout

block content
  h2 #{project.name}
  h5 Press the arrow keys to move through the layers
  .owl-carousel(style='width: 800px; height: 400px; margin: 0; position: absolute; top: 50%; -ms-transform: translateY(-50%); transform: translateY(-50%);')
    each item, index in max_order_list
      .item
        .row
          .col-md-12
            .card
              .card-body
                .dropdown(style='float:left')
                  button.btn2.btn-secondary.dropdown-toggle(type='button', id=`dropdownMenuButton${index}`, data-bs-toggle='dropdown', aria-expanded='false')
                    | Choose layer #{item}
                  ul.dropdown-menu(aria-labelledby=`dropdownMenuButton${index}`, style='max-height: 300%; overflow-y: scroll;')
                    each layer in layers
                      if layer.order == item
                        li
                          a.dropdown-item(href='#', data-order=item, data-layer=JSON.stringify(layer), onclick='handleClick(this)') #{layer.name}
                h5.card-title(id=`card-title-${index + 1}`, style='margin:auto') sorry
                p.card-text(id=`card-text-main-${index + 1}`) 
                  br
                  | Note: The Edit Layer button will not work until you select a layer
                p.card-text(id=`card-text1-${index + 1}`,style='float:left') 
                br
                br
                br
                br
                a.btn3.btn-primary.mb-2(style='width:30%;float:Right', id=`navigate-button-${index+1}`, href='#') Edit Layer

  .card.right-align
    .card-body 
      h5 Data Loading Settings
      p hi

  .card.right-align
    .card-body 
      h5 Data Training Settings
      p More text for the new card
  form(method='POST')
    button.btn.btn-primary.mb-1(style='width:17%;height:50px;float:Right') Run Layer
  

append scripts
  script.
    var layerlist = !{JSON.stringify(layerlist)};
    var ids = !{JSON.stringify(ids)}
    var userid = ids[0] 
    var projectid = ids[1]
    var basescript = `/${userid}/projects/${projectid}`

    const clicked = () => {
      console.log('hi') 
    }
    const find_layer_via_name = (layername) => {
      for (const layer of layers) {
        if (layer.name === layername) {
          return layer;
        }
      }
    };

    const update = (order, layer) => {
      layerlist[order - 1] = layer;
      // Update the card title dynamically
      const card_title_1 = document.querySelector(`#card-title-${order}`);
      const card_text_main = document.querySelector(`#card-text-main-${order}`);
      const card_text_1 = document.querySelector(`#card-text1-${order}`)

      if (card_title_1) { 
        card_title_1.textContent = layer.name;
      }
      if (card_text_main) {
        card_text_main.textContent = layer.sub_layer;
      }
      switch (layer.sub_layer) {
        case ('Convolutional Layer'):
          card_text_1.innerHTML = `<div style="text-align: left;">Input Depth: ${layer.conv_layer.input_depth}<br>Output Depth: ${layer.conv_layer.output_depth}<br>Kernal Size: ${layer.conv_layer.kernal_size}<br>Stride: ${layer.conv_layer.stride}<br>Padding: ${layer.conv_layer.padding}</div>`
          break;
        case ('Linear Layer'):
          card_text_1.innerHTML = `<div style="text-align: left;">Input Depth: ${layer.lin_layer.input_depth}<br>Number Of Neurons: ${layer.lin_layer.neurons}</div>`
          break;
        case ('Pooling Layer'):
          card_text_1.innerHTML = `<div style="text-align: left;">Kernal Size: ${layer.pool_layer.pooling_kernal_size}<br>Stride: ${layer.pool_layer.pooling_stride}<br>Padding: ${layer.pool_layer.pooling_padding}</div>`
          break;
        case ('Activation Function'):
          card_text_1.innerHTML = `<div style="text-align: left;">Activation Function: ${layer.activation_function}</div>`
          break;
        case ('Batch Norm'):
          card_text_1.innerHTML = `<div style="text-align: left;">Batch Norm: ${layer.batch_norm}</div>`
          break;
        case ('Dropout'):
          card_text_1.innerHTML = `<div style="text-align: left;">Dropout: ${layer.dropout}</div>`
          break;
      }

      const navigateButton = document.querySelector(`#navigate-button-${order}`);
      var link = document.getElementById(`navigate-button-${order}`)
      link.href = basescript +`/${layer._id}`

      // Update the active class in the dropdown
      const dropdownMenu = document.querySelector(`#dropdownMenuButton${order - 1}`).nextElementSibling;
      dropdownMenu.querySelectorAll('li').forEach(li => {
        li.classList.remove('active');
      });
      dropdownMenu.querySelector(`a[data-order="${order}"][data-layer='${JSON.stringify(layer)}']`).parentElement.classList.add('active');
    };

    const handleClick = (element) => {
      const order = element.getAttribute('data-order');
      const layer = JSON.parse(element.getAttribute('data-layer'));
      update(order, layer);
    };
